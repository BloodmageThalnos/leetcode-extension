function doit(){
    const HEADER_PY = "import numpy as np\n\
from copy import deepcopy\n\
from queue import PriorityQueue # put, get, qsize\n\
from collections import deque # append(left), pop(left), extend\n\
from collections import Counter # keys, values, most_common\n\
from random import random, randint # [a,b]\n\
import sys\n\
sys.setrecursionlimit(11000)\n\
\n\
mod = 10**9+7";

    function log(a){
        console.log("leetcode-extention: ",a)
    }

    function checkHeader(code, lang){    // check if the code needs to add header.
        if(lang==="python3"){
            return code.substr(0, 5)!=="#####";
        }
        return false;
    }

    function doModel(m){
        let lang = m._languageIdentifier.language;

        monaco.languages.setLanguageConfiguration(lang,{autoClosingPairs:[],surroundingPairs:[]});
        log("SUCCESS: set autoBracketing=False for "+lang);
        
        if(lang==="python3"){
            let now = m.getValue();
            if(checkHeader(now, lang)){
                m.setValue('##### Generated by Leetcode-extension by Littledva\n\n'
                    +HEADER_PY+'\n\n##### Solution \n'+now
                    +'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n');
            }
        }
    }

    setTimeout(()=>{
        let m = monaco.editor.getModels()[0];
        doModel(m);

        monaco.editor.onDidChangeModelLanguage((e)=>{
            setTimeout(()=>{
                let m = e.model;
                doModel(m);
            }, 400);
        });
    }, 2400);

    pageData.codeDefinition[0].defaultCode = "xxx";
    log(pageData);
    log(pageData.codeDefinition[0].defaultCode);
}

$(()=>{
    scriptContent = doit.toString() + ';doit();';
    var script = document.createElement('script');
    script.id = 'leetcode-extention-js';
    script.appendChild(document.createTextNode(scriptContent));
    document.documentElement.appendChild(script);
});
